---
description: Правила для фронтенда
globs: ./front/*
alwaysApply: true
---

# Структура фронтендa:
- ./front - фронтенд;
- ./front/docker - служебные файлы для контейнера;
- ./front/package.json - конфигурация проекта;
- ./front/vite.config.js - конфигурация сборки проекта;
- ./front/public - публичные файлы;
- ./front/src - исходный код;
- ./front/src/App.tsx - главный компонент;
- ./front/src/layouts - шаблоны страниц;
- ./front/src/pages - страницы;
- ./front/src/components - сложные составные компоненты;
- ./front/src/ui - простые односвязные компоненты для UI;
- ./front/src/utils - утилиты;
- ./front/src/hooks - хуки;
- ./front/src/assets - статические файлы (стили, изображения, шрифты и т.д.);

# Стэк:
- React 19.1.1
- TailwindCSS 4.1.12
<!-- - Shadcn UI 2.10.0 -->
- TypeScript 5.8.3
- Vite 7.1.2

# Флоу разработки:
- Архитектура должна быть построена на принципах SOLID;
- Пиши комментарии в проекте в соответствии с JSDoc, если это необходимо;
- Пиши комментарии в проекте на русском языке;
- При добавлении нового функционала, не ломаем старый функционал;
- Используй стрелочные функции, если это возможно;

# Стиль разработки:
- Используй стрелочные функции, если это возможно;
- Каждая функция и компонент должны иметь описание в JSDoc (на русском языке);
- Каждая функция и компонент должны иметь свой namespace (в JSDoc должен быть описан namespace);
- Когда мы используем импорты, через алиасы, то мы должны использовать @components, @ui, @utils, @hooks вместо @/components, @/ui, @/utils, @/hooks и т.д.;

<!-- - Когда создаешь UI компонент, бери пример архитектуры из директории компонента ./front/src/components/ui/Button;
- Когда создаешь сложный компонент, бери пример архитектуры из директории компонента ./front/src/components/Sidebar;
- className в компонентах должен быть объединен с помощью функции mergeClasses из файла ./front/src/utils/jsxtools.ts; -->
<!-- - mergeClasses из файла ./front/src/utils/jsxtools.ts должна быть использована для объединения классов;
- при использовании mergeClasses, каждый CSS класс должен быть отдельным аргументом;
- mergeClasses и cn взаимозаменяемы (всегда используй mergeClasses);
- makeVariants из файла ./front/src/utils/jsxtools.ts должна быть использована для создания вариаций классов;
- makeVariants и cva взаимозаменяемы (всегда используй makeVariants); -->

<!-- - Когда создаешь новый компонент, используй компоненты сначала из директории ./front/src/components/ui, а потом уже если нет нужных ты идешь создавать через Shadcn UI; -->
<!-- - Когда ты создаешь компонент через Shadcn UI, то ты должен привести его к виду компонента из директории ./front/src/components/ui/Button (стиль кода, архитектура, название файла, название компонента, комментарии, типы); -->
