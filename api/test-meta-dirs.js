import { createControllerLogger, createServiceLogger } from "./src/utils/logger.js"
import { readdir } from "fs/promises"
import { existsSync } from "fs"

console.log("=== –¢–µ—Å—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö ===\n")

// –¢–µ—Å—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
const userController = createControllerLogger("UserController")

const testLogging = () => {
  userController.info("–¢–µ—Å—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏", { test: true })
  userController.warn("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", { level: "warning" })
  userController.error("–û—à–∏–±–∫–∞", { error: "test error" })
}

testLogging()

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
setTimeout(async () => {
  try {
    console.log("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:")

    const logsExists = existsSync("./logs")
    console.log(`üìÅ logs/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${logsExists ? "‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" : "‚ùå –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}`)

    if (logsExists) {
      const logsContent = await readdir("./logs")
      console.log(`üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ logs/: ${logsContent.join(", ")}`)

      const metaExists = existsSync("./logs/meta")
      console.log(`üìÅ logs/meta/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${metaExists ? "‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" : "‚ùå –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}`)

      if (metaExists) {
        const metaContent = await readdir("./logs/meta")
        console.log(`üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ logs/meta/: ${metaContent.join(", ")}`)
      }
    }

    console.log("\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:", error.message)
  }
}, 1000)
