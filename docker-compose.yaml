services:
  db:
    build: ./docker/db
    restart: always
    environment:
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${EXTERNAL_DB_PORT}:${DB_PORT}"
    volumes:
      - ./docker/db/entrypoint.sh:/entrypoint.sh
      - ./docker/db/data:/var/lib/postgresql/data
    networks:
      - aidrom_network

  api:
    build: ./docker/api
    restart: always
    depends_on:
      - ${SERVICE_DB}
    environment:
      HOST: ${API_HOST}
      PORT: ${API_PORT}
      DB_CONNECTION_URL: ${API_DB_CONNECTION_URL}
    volumes:
      - ./docker/api/entrypoint.sh:/entrypoint.sh
      - ./docker/api/logs:/logs
      - ./docker/api/runtime:/runtime
      - ./api:/app
    networks:
      - aidrom_network

  front:
    build: ./docker/front
    restart: always
    environment:
      PROJECT_ROOT_PATH: ${PROJECT_ROOT_PATH}
      HOST: ${FRONTEND_HOST}
      PORT: ${FRONTEND_PORT}
      API_BASE_URL: ${FRONTEND_API_BASE_URL}
    depends_on:
      - ${SERVICE_API}
    volumes:
      - ./docker/front/entrypoint.sh:/entrypoint.sh
      - ./front:/app
    networks:
      - aidrom_network

  nginx:
    build: ./docker/nginx
    restart: always
    depends_on:
      - ${SERVICE_API}
      - ${SERVICE_FRONTEND}
    environment:
      API_PUBLIC_HOST: ${NGINX_API_PUBLIC_HOST}
      API_PUBLIC_PORT: ${NGINX_API_PUBLIC_PORT}
      API_PROXY_PASS: ${NGINX_API_PROXY_PASS}
      FRONTEND_PUBLIC_HOST: ${NGINX_FRONTEND_PUBLIC_HOST}
      FRONTEND_PUBLIC_PORT: ${NGINX_FRONTEND_PUBLIC_PORT}
      FRONTEND_PROXY_PASS: ${NGINX_FRONTEND_PROXY_PASS}
    ports:
      - "${EXTERNAL_FRONTEND_PORT}:${NGINX_FRONTEND_PUBLIC_PORT}" # Frontend
      - "${EXTERNAL_API_PORT}:${NGINX_API_PUBLIC_PORT}" # API
    volumes:
      - ./docker/nginx/entrypoint.sh:/entrypoint.sh
      - ./docker/nginx/default.env.conf:/tmp/default.env.conf:ro
      - ./docker/nginx/logs:/var/log/nginx
    networks:
      - aidrom_network

networks:
  aidrom_network:
